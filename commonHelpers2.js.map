{"version":3,"file":"commonHelpers2.js","sources":["../src/js/storage.js","../src/shopping-list.js"],"sourcesContent":["export const STORAGE_KEY = 'storage-of-books';\n\nexport const shoppingList =\n  JSON.parse(localStorage.getItem(STORAGE_KEY)) || [];\n\nexport function addToStorage(book) {\n  shoppingList.push(book);\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(shoppingList));\n}\n\nexport function handleBookInStorage(data) {\n  const isBookId = shoppingList.find(\n    bookInStorage => bookInStorage._id === data._id\n  );\n\n  if (isBookId) {\n    const dataBookID = document.querySelector('.modal-pop-up-btn').getAttribute('data_id_of_book');\n\n    const bookIndex = shoppingList.findIndex(\n      bookInStorage => bookInStorage._id === dataBookID\n    );\n\n    shoppingList.splice(bookIndex, 1);\n    localStorage.setItem(\n      STORAGE_KEY,\n      JSON.stringify(shoppingList)\n    );\n    document.querySelector('.modal-pop-up-btn').textContent = 'Add to shopping list';\n    modalMessage.remove();\n    return;\n  }\n\n  addToStorage(data);\n  document.querySelector('.modal-pop-up-btn').textContent = 'Remove from the shopping list';\n  document.querySelector('.modal-pop-up-btn').after(modalMessage);\n}  ","import './js/active-page-link.js';\nimport './js/buttom-switch.js';\nimport './js/active-page-menu.js';\nimport './js/mobile-menu.js';\nimport './js/active-page-link.js';\nimport './js/buttom-switch.js';\nimport './js/active-page-menu.js';\nimport './js/mobile-menu.js';\nimport './js/storage.js';\n\nconst STORAGE_KEY = 'storage-of-books';\nconst shoppingListUl = document.querySelector('.shopping-list');\n\n//====================\n\n//====================\n//повідомлення про відсутність книг\nconst emptyMessageContainer = document.createElement('div');\nemptyMessageContainer.classList.add('empty-message');\nemptyMessageContainer.innerHTML = `\n  <p>This page is empty, add some books and proceed to order.</p>\n  <img src=\"images/books-stack-mobile.png\" alt=\"Empty Book Stack\" />\n`;\n\n// отримання збережених книг з localStorage\nasync function getStoredBooks() {\n  try {\n    const storedBooks = await new Promise((resolve, reject) => {\n      const data = localStorage.getItem(STORAGE_KEY);\n      if (data) {\n        resolve(JSON.parse(data));\n      } else {\n        resolve([]);\n      }\n    });\n    return storedBooks;\n  } catch (error) {\n    console.error('Error getting stored books:', error);\n    throw error;\n  }\n}\n\n//функція для відображення списку книг\nasync function renderBooks() {\n  try {\n    const storedBooks = await getStoredBooks();\n    shoppingListUl.innerHTML = '';\n    if (storedBooks.length > 0) {\n      storedBooks.forEach(book => {\n        const li = document.createElement('li');\n        li.appendChild(createBookCard(book));\n        shoppingListUl.appendChild(li);\n      });\n    } else {\n      // Якщо немає збережених книг, вивести повідомлення про відсутність\n      shoppingListUl.appendChild(emptyMessageContainer);\n    }\n  } catch (error) {\n    console.error('Error rendering books:', error);\n  }\n}\n\n// Функція для створення карти книги\nfunction createBookCard(book) {\n  const card = document.createElement('div');\n  card.classList.add('book-card');\n  card.innerHTML = `\n    <img class=\"book-cover\" src=\"${book.image}\" alt=\"${book.title} />\n    <div class=\"book-details\">\n      <h2 class=\"book-title\">${book.title}</h2>\n      <p class=\"book-category\">${book.bookCategory}</p>\n      <p class=\"book-description\">${book.title}</p>\n      <p class=\"book-author\">${book.author}</p>\n      <div class=\"book-links\">\n        ${createMarketplaceLinks(book.marketplaces)}\n      </div>\n      <button class=\"remove-book-btn\" onclick=\"removeBook('${\n        book._id\n      }')\">R</button>\n    </div>\n  `;\n  return card;\n}\n\n// Функція для створення посилань на торгові майданчики\nfunction createMarketplaceLinks(marketplaces) {\n  return marketplaces && Array.isArray(marketplaces) && marketplaces.length\n    ? marketplaces\n        .map(link => `<a href=\"${link}\" target=\"_blank\">${link}</a>`)\n        .join('')\n    : '';\n}\n\nasync function removeBook(bookId) {\n  try {\n    const storedBooks = await getStoredBooks();\n    const updatedBooks = storedBooks.filter(book => book._id !== bookId);\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(updatedBooks));\n\n    // Оновлення відображення списку книг\n    await renderBooks();\n  } catch (error) {\n    console.error('Error removing book:', error);\n  }\n}\nrenderBooks();\n"],"names":["STORAGE_KEY","shoppingListUl","emptyMessageContainer","getStoredBooks","resolve","reject","data","error","renderBooks","storedBooks","book","li","createBookCard","card","createMarketplaceLinks","marketplaces","link"],"mappings":"yCAAO,MAAMA,EAAc,mBAGzB,KAAK,MAAM,aAAa,QAAQA,CAAW,CAAC,ECO9C,MAAMA,EAAc,mBACdC,EAAiB,SAAS,cAAc,gBAAgB,EAMxDC,EAAwB,SAAS,cAAc,KAAK,EAC1DA,EAAsB,UAAU,IAAI,eAAe,EACnDA,EAAsB,UAAY;AAAA;AAAA;AAAA,EAMlC,eAAeC,GAAiB,CAC9B,GAAI,CASF,OARoB,MAAM,IAAI,QAAQ,CAACC,EAASC,IAAW,CACzD,MAAMC,EAAO,aAAa,QAAQN,CAAW,EAE3CI,EADEE,EACM,KAAK,MAAMA,CAAI,EAEf,CAAE,CAFc,CAIhC,CAAK,CAEF,OAAQC,EAAO,CACd,cAAQ,MAAM,8BAA+BA,CAAK,EAC5CA,CACP,CACH,CAGA,eAAeC,GAAc,CAC3B,GAAI,CACF,MAAMC,EAAc,MAAMN,IAC1BF,EAAe,UAAY,GACvBQ,EAAY,OAAS,EACvBA,EAAY,QAAQC,GAAQ,CAC1B,MAAMC,EAAK,SAAS,cAAc,IAAI,EACtCA,EAAG,YAAYC,EAAeF,CAAI,CAAC,EACnCT,EAAe,YAAYU,CAAE,CACrC,CAAO,EAGDV,EAAe,YAAYC,CAAqB,CAEnD,OAAQK,EAAO,CACd,QAAQ,MAAM,yBAA0BA,CAAK,CAC9C,CACH,CAGA,SAASK,EAAeF,EAAM,CAC5B,MAAMG,EAAO,SAAS,cAAc,KAAK,EACzC,OAAAA,EAAK,UAAU,IAAI,WAAW,EAC9BA,EAAK,UAAY;AAAA,mCACgBH,EAAK,KAAK,UAAUA,EAAK,KAAK;AAAA;AAAA,+BAElCA,EAAK,KAAK;AAAA,iCACRA,EAAK,YAAY;AAAA,oCACdA,EAAK,KAAK;AAAA,+BACfA,EAAK,MAAM;AAAA;AAAA,UAEhCI,EAAuBJ,EAAK,YAAY,CAAC;AAAA;AAAA,6DAG3CA,EAAK,GACN;AAAA;AAAA,IAGEG,CACT,CAGA,SAASC,EAAuBC,EAAc,CAC5C,OAAOA,GAAgB,MAAM,QAAQA,CAAY,GAAKA,EAAa,OAC/DA,EACG,IAAIC,GAAQ,YAAYA,CAAI,qBAAqBA,CAAI,MAAM,EAC3D,KAAK,EAAE,EACV,EACN,CAcAR,EAAa"}